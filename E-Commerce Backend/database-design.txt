Database to be used: MySQL

Database name: ecommerce_db

Tables required:

Table users:
Fields:
user_id: mediumint primary key auto increment,
user_name: varchar(45) not null,
email_id: varchar(30) unique not null

Functional Dependencies:
user_id -> (user_name, email_id)
email_id -> (user_id, user_name)

Table users is in BCNF.

Table products:
Fields:
product_id mediumint primary key auto_increment,
product_name varchar(45) not null,
price decimal(8, 2) not null,
category_id tinyint not null,
available_quantity int not null,
price_version smallint default 1 not null,
foreign key(category_id) references categories(category_id)

Functional Dependencies:
product_id -> (product_name, product_name, price, category_id, available_quantity, price_version)

Table products is in BCNF.

Table categories:
Fields:
category_id: tinyint primary key
category_name: varchar(45) not null

Functional Dependencies:
category_id ->  category_name

Table categories is in BCNF.

Table inventory:
Fields:
inventory_id mediumint primary key auto_increment,
product_id mediumint not null,
change_type enum('RESTOCK', 'SALE', 'RETURN', 'ADJUSTMENT', 
'RESERVATION') not null,
quantity int not null,
creation_datetime timestamp default current_timestamp not null,
reason varchar(45),
status enum('ACTIVE', 'COMPLETED') not null,
status_change_datetime timestamp default null,
adjusted_by varchar(45),
foreign key(product_id) references products(product_id)

Functional Dependencies:
inventory_id -> (product_id, change_type, quantity, creation_datetime, reason, status,
status_change_datetime, adjusted_by)

Table inventory is in BCNF.

Reasons for change_type = 'RETURN' are:
'damaged_product', 'defective_product', 'wrong_item', 
'change_of_mind', 'size_or_fit_issues', 'expired_product', 'not_as_described'

Reasons for change_type = 'adjustment' are:
'damaged_goods', 'miscount', 'theft', 'expired_goods', 'supplier_returns'

Reason for change_of_mind = 'restock': New stock

Reasons description for change_type = 'return' are:
'damaged_product' - The product is damaged upon arrival, necessitating a return.
'defective_product' - The item received is not functioning as expected or is faulty.
'wrong_item' - The customer receives a product different from what they ordered.
'change_of_mind' - Customers decide they no longer want the product after purchasing 
it.
'size_or_fit_issues' - Common in clothing and shoes; the product does not fit as 
expected.
'expired_product' - In cases of consumables, the product is returned because it was 
expired upon receipt.
'not_as_described' - The product does not meet the customer's expectations for quality.

Reasons description for change_type = 'adjustment' are:
'damaged_goods' - Products that are damaged during shipping, handling, or storage 
and need to be removed from inventory.

'miscount' - Corrections made when a discrepancy is found between physical stock 
and inventory records.

Positive Miscount Adjustments:
Example: If your records show 50 units of a product, but a physical count reveals 
70 units, you would adjust the inventory by +20 units.

Negative Miscount Adjustments:
Example: If your records show 100 units of a product, but the count reveals only 
80 units, you would adjust the inventory by -20 units.

'theft' - Adjustments made to account for lost or stolen inventory.

'expired_goods' - Items that are no longer sellable due to expiration dates, 
especially in industries like food and pharmaceuticals.

'supplier_returns' - When returning unsold or defective goods to suppliers.

Table orders:
Fields:
order_id mediumint primary key auto_increment,
user_id mediumint not null,
total_amount decimal(9, 2) not null,
order_status enum('PENDING', 'CONFIRMED', 'PROCESSING', 'PACKAGED', 'SHIPPED', 
'DELIVERED', 'CANCELLED', 'RETURNED', 'REFUNDED') not null,
order_creation_datetime timestamp default current_timestamp not null,
order_cancellation_datetime timestamp default null

Functional Dependencies:
order_id -> (user_id, total_amount, order_status, order_creation_datetime, 
order_cancellation_datetime)

Table orders is in BCNF.

order_status description:
'PENDING': The user has initiated payment but has not yet completed the payment.

'CONFIRMED': The order is confirmed after payment is completed or the customer 
selects cash-on-delivery (COD).

'PROCESSING': The order is being prepared for fulfillment. This could include 
picking items from inventory.

'PACKAGED': The order has been packaged and is ready for shipping but has not yet 
been handed over to the shipping carrier.

'SHIPPED': The order has been dispatched to the shipping carrier for delivery.

'DELIVERED': The order has been successfully delivered to the customer.

'CANCELLED': The order can get cancelled:
- After the order was placed but before shipment.

Table order_items:
Fields:
order_id mediumint,
product_id mediumint,
quantity tinyint not null,
price_at_purchase decimal(8, 2) not null,
primary key (order_id, product_id),
foreign key(order_id) references orders(order_id),
foreign key(product_id) references products(product_id)

Functional Dependencies:
(order_id, product_id) -> (quantity, price_at_purchase)

Table order_items is in BCNF.

Table reservations:
Fields:
reservation_id mediumint primary key auto_increment,
user_id mediumint not null,
creation_datetime timestamp default current_timestamp not null,
expiration_datetime timestamp default (current_timestamp + interval 30 minute) not null,
status enum('ACTIVE', 'EXPIRED', 'USED') not null,
foreign key(user_id) references users(user_id)

Functional Dependencies:
reservation_id -> (user_id, creation_datetime, expiration_datetime, status)

Table reservations is in BCNF.

Table inventory_orders:
Fields:
inventory_id mediumint primary key,
order_id mediumint,
reservation_id mediumint not null,
product_id mediumint not null,
quantity int not null,
price_at_purchase decimal(8,2),
foreign key(inventory_id) references inventory(inventory_id),
foreign key(order_id) references orders(order_id),
foreign key(reservation_id) references reservations(reservation_id),
foreign key(product_id) references products(product_id)

Functional Dependencies:
inventory_id -> (order_id, reservation_id, product_id, quantity, price_at_purchase)

Table inventory_orders is in BCNF.

Table product_price_history:
Fields:
history_id mediumint primary key auto_increment,
product_id mediumint not null,
old_price decimal(8,2),
new_price decimal(8,2) not null,
current_price_version smallint not null,
price_change_datetime timestamp default current_timestamp not null

Functional Dependencies:
history_id -> (product_id, old_price, new_price, current_price_version, price_change_datetime)
(product_id, current_price_version) -> (history_id, old_price, new_price, price_change_datetime)
(product_id, price_change_datetime) -> (history_id, old_price, new_price, current_price_version)

Table product_price_history is in BCNF.
